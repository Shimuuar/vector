name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux
          # - { cabal: "3.2", os: ubuntu-latest,  ghc: "7.10.3" }
          # - { cabal: "3.2", os: ubuntu-latest,  ghc: "8.0.2"  }
          # - { cabal: "3.2", os: ubuntu-latest,  ghc: "8.2.2"  }
          - { cabal: "3.2", os: ubuntu-latest,  ghc: "8.4.4"  }
          # - { cabal: "3.2", os: ubuntu-latest,  ghc: "8.6.5"  }
          # - { cabal: "3.2", os: ubuntu-latest,  ghc: "8.8.4"  }
          # - { cabal: "3.2", os: ubuntu-latest,  ghc: "8.10.2" }
          # Win
#          - { cabal: "3.2", os: windows-latest, ghc: "8.4.4"  }
          - { cabal: "3.2", os: windows-latest, ghc: "8.6.5"  }
#          - { cabal: "3.2", os: windows-latest, ghc: "8.8.4"  }
#          - { cabal: "3.2", os: windows-latest, ghc: "8.10.1" }
          # MacOS
          # - { cabal: "3.2", os: macOS-latest,   ghc: "8.4.4"  }
          # - { cabal: "3.2", os: macOS-latest,   ghc: "8.6.5"  }
          # - { cabal: "3.2", os: macOS-latest,   ghc: "8.8.4"  }
          # - { cabal: "3.2", os: macOS-latest,   ghc: "8.10.1" }
      fail-fast: false

    steps:
    # ----------------
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'
    # ----------------
    - uses: actions/setup-haskell@v1.1.4
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
    # ----------------
    - uses: actions/cache@v1
      name: Cache ~/.cabal/store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}--${{ github.Shah }}
    # ----------------
    - name: Versions
      run: |
        cabal -V
        ghc -V
    # ----------------
    - name: Make sdist
      run: |
        mkdir sdist
        cabal sdist -o sdist
    - name: Unpack
      run: |
        mkdir unpacked
        tar -C unpacked -xzf sdist/vector*tar.gz
        cd unpacked


    # ----------------
#    - name: cabal check
#      run: |
#        cabal -vnormal check
    # ----------------
#    - name: Build
#      run: |
#        cabal configure --enable-tests --enable-benchmarks
#        cabal build all --write-ghc-environment-files=always
    # ----------------
#    - name: Test
#      run: |
#        cabal test all
